/****************************************************************************
 *																			*
 *		Copyright (C) 2001-2002 YAMAHA CORPORATION. All rights reserved.	*
 *																			*
 *		Module		: matable.h												*
 *																			*
 *		Description	: table of data for MA SMW								*
 *																			*
 * 		Version		: 1.3.7.1	2002.08.21									*
 *																			*
 ****************************************************************************/

#ifndef __MATABLE_H__
#define __MATABLE_H__

/* for Create */

static const UINT8 ma_resmode_index[17] = 
	{ 0, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6 };

static const UINT8 ma_resmode_chnum[7] = { 16,  1,  4,  8, 12, 15, 16 };
static const UINT8 ma_resmode_fmnum[7] = { 16,  1,  4,  8, 12, 15, 16 };
static const UINT8 ma_resmode_wtnum[7] = {  8,  1,  2,  3,  5,  6,  7 };
static const UINT8 ma_resmode_rbnum[7] = {  8,  1,  2,  3,  5,  6,  7 };

static const UINT8 ma_resmode_minslot[2][2][7] =
{
	{										/* delayed */
		{  0,  0,  0,  0,  0,  0,  0 },				/* FM */
		{ 32, 32, 32, 32, 32, 32, 32 }				/* WT */
	},
	{										/* direct */
		{  0, 15, 12,  8,  4,  1,  0 },				/* FM */
		{ 32, 38, 37, 36, 34, 33, 32 }				/* WT */
	}
};

static const UINT8 ma_resmode_maxslot[2][2][7] =
{
	{										/* delayed */
		{ 31,  0,  3,  7, 11, 14, 15 },				/* FM */
		{ 39, 32, 33, 34, 36, 37, 38 }				/* WT */
	},
	{										/* direct */
		{ 31, 15, 15, 15, 15, 15, 15 },				/* FM */
		{ 39, 38, 38, 38, 38, 38, 38 }				/* WT */
	}
};

static const UINT32 ma_resmode_chmap[MASMW_NUM_SEQTYPE][7] =
{
	{ 0x0000FFFF, 0x00000001, 0x0000000F, 0x000000FF, 0x00000FFF, 0x00007FFF, 0x0000FFFF },
	{ 0x0000FFFF, 0x00008000, 0x0000F000, 0x0000FF00, 0x0000FFF0, 0x0000FFFE, 0x0000FFFF },
	{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },
};
static const UINT32 ma_resmode_fmmap[MASMW_NUM_SEQTYPE][7] =
{
	{ 0x0000FFFF, 0x00000001, 0x0000000F, 0x000000FF, 0x00000FFF, 0x00007FFF, 0x0000FFFF },
	{ 0x0000FFFF, 0x00008000, 0x0000F000, 0x0000FF00, 0x0000FFF0, 0x0000FFFE, 0x0000FFFF },
	{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },
};
static const UINT32 ma_resmode_wtmap[MASMW_NUM_SEQTYPE][7] =
{
	{ 0x000000FF, 0x00000001, 0x00000003, 0x00000007, 0x0000001F, 0x0000003F, 0x0000007F },
	{ 0x000000FF, 0x00000040, 0x00000060, 0x00000070, 0x0000007C, 0x0000007E, 0x0000007F },
	{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },
};
static const UINT32 ma_resmode_rbmap[MASMW_NUM_SEQTYPE][7] =
{
	{ 0x000000FF, 0x00000001, 0x00000003, 0x00000007, 0x0000001F, 0x0000003F, 0x0000007F },
	{ 0x000000FF, 0x00000040, 0x00000060, 0x00000070, 0x0000007C, 0x0000007E, 0x0000007F },
	{ 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },
};

/* dB table */

static const UINT8	db_table[128] =
{
	192, 168, 144, 130, 120, 112, 106, 101,		/*   0-  7 */
	 96,  92,  88,	85,	 82,  79,  77,	74,		/*   8- 15 */
	 72,  70,  68,	66,	 64,  63,  61,	59,		/*  16- 23 */
	 58,  56,  55,	54,	 53,  51,  50,	49,		/*  24- 31 */
	 48,  47,  46,	45,	 44,  43,  42,	41,		/*  32- 39 */
	 40,  39,  38,	38,	 37,  36,  35,	35,		/*  40- 47 */
	 34,  33,  32,	32,	 31,  30,  30,	29,		/*  48- 55 */
	 28,  28,  27,	27,	 26,  25,  25,	24,		/*  56- 63 */
	 24,  23,  23,	22,	 22,  21,  21,	20,		/*  64- 71 */
	 20,  19,  19,	18,	 18,  17,  17,	16,		/*  72- 79 */
	 16,  16,  15,	15,	 14,  14,  14,	13,		/*  80- 87 */
	 13,  12,  12,	12,	 11,  11,  10,	10,		/*  88- 95 */
	 10,   9,	9,	 9,	  8,   8,	8,	 7,		/*  96-103 */
	  7,   7,	6,	 6,	  6,   5,	5,	 5,		/* 104-111 */
	  4,   4,	4,	 3,	  3,   3,	3,	 2,		/* 112-119 */
	  2,   2,	1,	 1,	  1,   1,	0,	 0		/* 120-127 */
};

/* volume table */

static const UINT8	vol_table[193] =
{
	 127,  123,	 120,  116,	 113,  110,	 107,  104,
	 101,	98,	  95,	93,	  90,	87,	  85,	82,
	  80,	78,	  76,	74,	  71,	69,	  67,	66,
	  64,	62,	  60,	58,	  57,	55,	  54,	52,
	  51,	49,	  48,	46,	  45,	44,	  43,	41,
	  40,	39,	  38,	37,	  36,	35,	  34,	33,
	  32,	31,	  30,	29,	  28,	28,	  27,	26,
	  25,	25,	  24,	23,	  23,	22,	  21,	21,
	  20,	20,	  19,	18,	  18,	17,	  17,	16,
	  16,	16,	  15,	15,	  14,	14,	  13,	13,
	  13,	12,	  12,	12,	  11,	11,	  11,	10,
	  10,	10,	  10,	 9,	   9,	 9,	   8,	 8,
	   8,	 8,	   8,	 7,	   7,	 7,	   7,	 7,
	   6,	 6,	   6,	 6,	   6,	 6,	   5,	 5,
	   5,	 5,	   5,	 5,	   5,	 4,	   4,	 4,
	   4,	 4,	   4,	 4,	   4,	 3,	   3,	 3,
	   3,	 3,	   3,	 3,	   3,	 3,	   3,	 3,
	   3,	 2,	   2,	 2,	   2,	 2,	   2,	 2,
	   2,	 2,	   2,	 2,	   2,	 2,	   2,	 2,
	   2,	 2,	   2,	 1,	   1,	 1,	   1,	 1,
	   1,	 1,	   1,	 1,	   1,	 1,	   1,	 1,
	   1,	 1,	   1,	 1,	   1,	 1,	   1,	 1,
	   1,	 1,	   1,	 1,	   1,	 1,	   1,	 1,
	   1,	 1,	   1,	 1,	   1,	 1,	   1,	 1,
	   0
};

static const UINT16 ma_timebase[18] = {			/* 1ms, ..., 18ms */
	0x0360, 0x06C0, 0x0A20, 0x0D80, 0x10E0, 0x1440, 0x17A0, 0x1B00, 0x1E60,
	0x21C0, 0x2520, 0x2880, 0x2BE0, 0x2F40, 0x32A0, 0x3600, 0x3960, 0x3CC0
};

/* FM Block & Fnum */

static const UINT16 ma_fm_block_100[128] =
{
	0x0433, 0x043E, 0x0449, 0x0454, 0x0461, 0x046E, 0x047D, 0x080D,
	0x081C, 0x082D, 0x083F, 0x0850, 0x0866, 0x087A, 0x0C12, 0x0C28,
	0x0C42, 0x0C5C, 0x0C79, 0x1017, 0x1038, 0x1059, 0x107C, 0x1423,
	0x144A, 0x1476, 0x1822, 0x1852, 0x1C04, 0x1C3B, 0x1C73, 0x1097,
	0x10B7, 0x10D8, 0x10FD, 0x14A2, 0x14CA, 0x14F5, 0x18A1, 0x18D2,
	0x1C84, 0x1CB9, 0x1CF2, 0x1117, 0x1137, 0x1158, 0x117C, 0x1522,
	0x154A, 0x1575, 0x1922, 0x1951, 0x1D04, 0x1D39, 0x1D72, 0x1197,
	0x11B7, 0x11D8, 0x11FC, 0x15A2, 0x15CA, 0x15F5, 0x19A2, 0x19D1,
	0x1D84, 0x1DB9, 0x1DF2, 0x1217, 0x1237, 0x1258, 0x127C, 0x1622,
	0x164A, 0x1674, 0x1A22, 0x1A51, 0x1E04, 0x1E39, 0x1E72, 0x1297,
	0x12B7, 0x12D8, 0x12FC, 0x16A2, 0x16CA, 0x16F4, 0x1AA2, 0x1AD1,
	0x1E84, 0x1EB9, 0x1EF2, 0x1317, 0x1337, 0x1358, 0x137C, 0x1722,
	0x174A, 0x1774, 0x1B22, 0x1B51, 0x1F04, 0x1F39, 0x1F72, 0x1397,
	0x13B7, 0x13D8, 0x13FC, 0x17A2, 0x17CA, 0x17F4, 0x1BA2, 0x1BD1,
	0x1F84, 0x1FB9, 0x1FF2, 0x1397, 0x13B7, 0x13D8, 0x13FC, 0x17A2,
	0x17CA, 0x17F4, 0x1BA1, 0x1BD1, 0x1F84, 0x1FB9, 0x1FF2, 0x1397
};

static const UINT16 ma_fm_block_50a[128] =
{
	0x10A7, 0x10B7, 0x10C7, 0x10D9, 0x10EA, 0x10FC, 0x148F, 0x14A2,
	0x14B6, 0x14CA, 0x14DF, 0x14F5, 0x188B, 0x18A2, 0x18B9, 0x18D1,
	0x18EA, 0x1C84, 0x1C9E, 0x1CB9, 0x1CD5, 0x1CF2, 0x1108, 0x1117,
	0x1127, 0x1137, 0x1147, 0x1158, 0x116A, 0x117C, 0x150F, 0x1522,
	0x1536, 0x154A, 0x155F, 0x1575, 0x190B, 0x1922, 0x1939, 0x1951,
	0x196A, 0x1D04, 0x1D1E, 0x1D39, 0x1D55, 0x1D72, 0x1188, 0x1197,
	0x11A6, 0x11B7, 0x11C7, 0x11D8, 0x11EA, 0x11FC, 0x158F, 0x15A2,
	0x15B6, 0x15CA, 0x15DF, 0x15F4, 0x198B, 0x19A1, 0x19B9, 0x19D1,
	0x19EA, 0x1D84, 0x1D9E, 0x1DB9, 0x1DD5, 0x1DF2, 0x1208, 0x1217,
	0x1226, 0x1237, 0x1247, 0x1258, 0x126A, 0x127C, 0x160F, 0x1622,
	0x1636, 0x164A, 0x165F, 0x1674, 0x1A0B, 0x1A21, 0x1A39, 0x1A51,
	0x1A6A, 0x1E04, 0x1E1E, 0x1E39, 0x1E55, 0x1E72, 0x1287, 0x1297,
	0x12A6, 0x12B7, 0x12C7, 0x12D8, 0x12EA, 0x12FC, 0x168F, 0x16A2,
	0x16B6, 0x16CA, 0x16DF, 0x16F4, 0x1A8B, 0x1AA1, 0x1AB9, 0x1AD1,
	0x1AEA, 0x1E84, 0x1E9E, 0x1EB9, 0x1ED5, 0x1EF2, 0x1307, 0x1317,
	0x1326, 0x1337, 0x1347, 0x1358, 0x136A, 0x137C, 0x170F, 0x1722
};

static const UINT16 ma_fm_block_50b[128] =
{
	0x0848, 0x0851, 0x085B, 0x0865, 0x0870, 0x087A, 0x0C06, 0x0C11,
	0x0C1D, 0x0C29, 0x0C35, 0x0C42, 0x0C4F, 0x0C5D, 0x0C6B, 0x0C79,
	0x1008, 0x1017, 0x1027, 0x1037, 0x1048, 0x1059, 0x106A, 0x107C,
	0x140F, 0x1422, 0x1436, 0x144A, 0x145F, 0x1475, 0x180B, 0x1822,
	0x1839, 0x1852, 0x186A, 0x1C04, 0x1C1E, 0x1C3A, 0x1C56, 0x1C72,
	0x1088, 0x1097, 0x10A7, 0x10B7, 0x10C7, 0x10D8, 0x10EA, 0x10FC,
	0x148F, 0x14A2, 0x14B6, 0x14CA, 0x14DF, 0x14F5, 0x188B, 0x18A2,
	0x18B9, 0x18D1, 0x18EA, 0x1C84, 0x1C9E, 0x1CB9, 0x1CD5, 0x1CF2,
	0x1108, 0x1117, 0x1127, 0x1137, 0x1147, 0x1158, 0x116A, 0x117C,
	0x150F, 0x1522, 0x1536, 0x154A, 0x155F, 0x1575, 0x190B, 0x1922,
	0x1939, 0x1951, 0x196A, 0x1D04, 0x1D1E, 0x1D39, 0x1D55, 0x1D72,
	0x1188, 0x1197, 0x11A6, 0x11B7, 0x11C7, 0x11D8, 0x11EA, 0x11FC,
	0x158F, 0x15A2, 0x15B6, 0x15CA, 0x15DF, 0x15F4, 0x198B, 0x19A1,
	0x19B9, 0x19D1, 0x19EA, 0x1D84, 0x1D9E, 0x1DB9, 0x1DD5, 0x1DF2,
	0x1207, 0x1217, 0x1226, 0x1237, 0x1247, 0x1258, 0x126A, 0x127C,
	0x160F, 0x1622, 0x1636, 0x164A, 0x165F, 0x1674, 0x1A0B, 0x1A21
};

static const UINT16 ma_fm_block_50c[128] =
{
	0x1839, 0x1852, 0x186B, 0x1C04, 0x1C1F, 0x1C3A, 0x1C56, 0x1C72,
	0x1088, 0x1097, 0x10A7, 0x10B7, 0x10C7, 0x10D9, 0x10EA, 0x10FC,
	0x148F, 0x14A2, 0x14B6, 0x14CA, 0x14DF, 0x14F5, 0x188B, 0x18A2,
	0x18B9, 0x18D1, 0x18EA, 0x1C84, 0x1C9E, 0x1CB9, 0x1CD5, 0x1CF2,
	0x1108, 0x1117, 0x1127, 0x1137, 0x1147, 0x1158, 0x116A, 0x117C,
	0x150F, 0x1522, 0x1536, 0x154A, 0x155F, 0x1575, 0x190B, 0x1922,
	0x1939, 0x1951, 0x196A, 0x1D04, 0x1D1E, 0x1D39, 0x1D55, 0x1D72,
	0x1188, 0x1197, 0x11A6, 0x11B7, 0x11C7, 0x11D8, 0x11EA, 0x11FC,
	0x158F, 0x15A2, 0x15B6, 0x15CA, 0x15DF, 0x15F5, 0x198B, 0x19A2,
	0x19B9, 0x19D1, 0x19EA, 0x1D84, 0x1D9E, 0x1DB9, 0x1DD5, 0x1DF2,
	0x1208, 0x1217, 0x1226, 0x1237, 0x1247, 0x1258, 0x126A, 0x127C,
	0x160F, 0x1622, 0x1636, 0x164A, 0x165F, 0x1674, 0x1A0B, 0x1A21,
	0x1A39, 0x1A51, 0x1A6A, 0x1E04, 0x1E1E, 0x1E39, 0x1E55, 0x1E72,
	0x1288, 0x1297, 0x12A6, 0x12B7, 0x12C7, 0x12D8, 0x12EA, 0x12FC,
	0x168F, 0x16A2, 0x16B6, 0x16CA, 0x16DF, 0x16F4, 0x1A8B, 0x1AA1,
	0x1AB9, 0x1AD1, 0x1AEA, 0x1E84, 0x1E9E, 0x1EB9, 0x1ED5, 0x1EF2
};

static const UINT16 ma_fm_block_50[128] =
{
	0x148F, 0x14A2, 0x14B6, 0x14CA, 0x14DF, 0x14F5, 0x188B, 0x18A2,
	0x18B9, 0x18D1, 0x18EA, 0x1C84, 0x1C9E, 0x1CB9, 0x1CD5, 0x1CF2,
	0x1108, 0x1117, 0x1127, 0x1137, 0x1147, 0x1158, 0x116A, 0x117C,
	0x150F, 0x1522, 0x1536, 0x154A, 0x155F, 0x1575, 0x190B, 0x1922,
	0x1939, 0x1951, 0x196A, 0x1D04, 0x1D1E, 0x1D39, 0x1D55, 0x1D72,
	0x1188, 0x1197, 0x11A6, 0x11B7, 0x11C7, 0x11D8, 0x11EA, 0x11FC,
	0x158F, 0x15A2, 0x15B6, 0x15CA, 0x15DF, 0x15F4, 0x198B, 0x19A1,
	0x19B9, 0x19D1, 0x19EA, 0x1D84, 0x1D9E, 0x1DB9, 0x1DD5, 0x1DF2,
	0x1207, 0x1217, 0x1226, 0x1237, 0x1247, 0x1258, 0x126A, 0x127C,
	0x160F, 0x1622, 0x1636, 0x164A, 0x165F, 0x1674, 0x1A0B, 0x1A21,
	0x1A39, 0x1A51, 0x1A6A, 0x1E04, 0x1E1E, 0x1E39, 0x1E55, 0x1E72,
	0x1287, 0x1297, 0x12A6, 0x12B7, 0x12C7, 0x12D8, 0x12EA, 0x12FC,
	0x168F, 0x16A2, 0x16B6, 0x16CA, 0x16DF, 0x16F4, 0x1A8B, 0x1AA1,
	0x1AB9, 0x1AD1, 0x1AEA, 0x1E84, 0x1E9E, 0x1EB9, 0x1ED5, 0x1EF2,
	0x1307, 0x1317, 0x1326, 0x1337, 0x1347, 0x1358, 0x136A, 0x137C,
	0x170F, 0x1722, 0x1736, 0x174A, 0x175F, 0x1774, 0x1B0B, 0x1B21
};

static const UINT16 ma_fm_block_20[128] =
{
	0x119D, 0x11A3, 0x11AA, 0x11B0, 0x11B7, 0x11BD, 0x11C4, 0x11CB,
	0x11D1, 0x11D8, 0x11DF, 0x11E6, 0x11ED, 0x11F5, 0x11FC, 0x1583,
	0x158B, 0x1592, 0x159A, 0x15A2, 0x15AA, 0x15B2, 0x15BA, 0x15C2,
	0x15CA, 0x15D2, 0x15DB, 0x15E3, 0x15EC, 0x15F4, 0x15FD, 0x1986,
	0x198F, 0x1998, 0x19A1, 0x19AB, 0x19B4, 0x19BE, 0x19C7, 0x19D1,
	0x19DB, 0x19E5, 0x19EF, 0x19F9, 0x1D84, 0x1D8E, 0x1D99, 0x1DA3,
	0x1DAE, 0x1DB9, 0x1DC4, 0x1DCF, 0x1DDB, 0x1DE6, 0x1DF2, 0x1DFE,
	0x1205, 0x120B, 0x1211, 0x1217, 0x121D, 0x1223, 0x122A, 0x1230,
	0x1237, 0x123D, 0x1244, 0x124B, 0x1251, 0x1258, 0x125F, 0x1266,
	0x126D, 0x1275, 0x127C, 0x1603, 0x160B, 0x1612, 0x161A, 0x1622,
	0x162A, 0x1632, 0x163A, 0x1642, 0x164A, 0x1652, 0x165B, 0x1663,
	0x166C, 0x1674, 0x167D, 0x1A06, 0x1A0F, 0x1A18, 0x1A21, 0x1A2B,
	0x1A34, 0x1A3E, 0x1A47, 0x1A51, 0x1A5B, 0x1A65, 0x1A6F, 0x1A79,
	0x1E04, 0x1E0E, 0x1E19, 0x1E23, 0x1E2E, 0x1E39, 0x1E44, 0x1E4F,
	0x1E5B, 0x1E66, 0x1E72, 0x1E7E, 0x1284, 0x128A, 0x1291, 0x1297,
	0x129D, 0x12A3, 0x12AA, 0x12B0, 0x12B7, 0x12BD, 0x12C4, 0x12CB
};

static const UINT16 ma_fm_block_5[128] =
{
	0x1DD8, 0x1DDB, 0x1DDE, 0x1DE1, 0x1DE3, 0x1DE6, 0x1DE9, 0x1DEC,
	0x1DEF, 0x1DF2, 0x1DF5, 0x1DF8, 0x1DFB, 0x1DFE, 0x1200, 0x1202,
	0x1203, 0x1205, 0x1206, 0x1207, 0x1209, 0x120B, 0x120C, 0x120E,
	0x120F, 0x1211, 0x1212, 0x1214, 0x1215, 0x1217, 0x1218, 0x121A,
	0x121B, 0x121D, 0x121F, 0x1220, 0x1222, 0x1223, 0x1225, 0x1226,
	0x1228, 0x122A, 0x122B, 0x122D, 0x122E, 0x1230, 0x1232, 0x1233,
	0x1235, 0x1237, 0x1238, 0x123A, 0x123B, 0x123D, 0x123F, 0x1240,
	0x1242, 0x1244, 0x1245, 0x1247, 0x1249, 0x124B, 0x124C, 0x124E,
	0x1250, 0x1251, 0x1253, 0x1255, 0x1257, 0x1258, 0x125A, 0x125C,
	0x125E, 0x125F, 0x1261, 0x1263, 0x1265, 0x1266, 0x1268, 0x126A,
	0x126C, 0x126D, 0x126F, 0x1271, 0x1273, 0x1275, 0x1277, 0x1278,
	0x127A, 0x127C, 0x127E, 0x1600, 0x1602, 0x1603, 0x1605, 0x1607,
	0x1609, 0x160B, 0x160D, 0x160F, 0x1611, 0x1612, 0x1614, 0x1616,
	0x1618, 0x161A, 0x161C, 0x161E, 0x1620, 0x1622, 0x1624, 0x1626,
	0x1628, 0x162A, 0x162C, 0x162E, 0x1630, 0x1632, 0x1634, 0x1636,
	0x1638, 0x163A, 0x163C, 0x163E, 0x1640, 0x1642, 0x1644, 0x1646
};

static const UINT16 ma_fm_block_10[128] =
{
	0x19A6, 0x19AB, 0x19AF, 0x19B4, 0x19B9, 0x19BE, 0x19C3, 0x19C7,
	0x19CC, 0x19D1, 0x19D6, 0x19DB, 0x19E0, 0x19E5, 0x19EA, 0x19EF,
	0x19F4, 0x19F9, 0x19FE, 0x1D84, 0x1D89, 0x1D8E, 0x1D93, 0x1D99,
	0x1D9E, 0x1DA3, 0x1DA9, 0x1DAE, 0x1DB4, 0x1DB9, 0x1DBF, 0x1DC4,
	0x1DCA, 0x1DCF, 0x1DD5, 0x1DDB, 0x1DE1, 0x1DE6, 0x1DEC, 0x1DF2,
	0x1DF8, 0x1DFE, 0x1202, 0x1205, 0x1207, 0x120B, 0x120E, 0x1211,
	0x1214, 0x1217, 0x121A, 0x121D, 0x1220, 0x1223, 0x1226, 0x122A,
	0x122D, 0x1230, 0x1233, 0x1237, 0x123A, 0x123D, 0x1240, 0x1244,
	0x1247, 0x124B, 0x124E, 0x1251, 0x1255, 0x1258, 0x125C, 0x125F,
	0x1263, 0x1266, 0x126A, 0x126D, 0x1271, 0x1275, 0x1278, 0x127C,
	0x1600, 0x1603, 0x1607, 0x160B, 0x160F, 0x1612, 0x1616, 0x161A,
	0x161E, 0x1622, 0x1626, 0x162A, 0x162E, 0x1632, 0x1636, 0x163A,
	0x163E, 0x1642, 0x1646, 0x164A, 0x164E, 0x1652, 0x1656, 0x165B,
	0x165F, 0x1663, 0x1667, 0x166C, 0x1670, 0x1674, 0x1679, 0x167D,
	0x1A02, 0x1A06, 0x1A0B, 0x1A0F, 0x1A14, 0x1A18, 0x1A1D, 0x1A21,
	0x1A26, 0x1A2B, 0x1A2F, 0x1A34, 0x1A39, 0x1A3E, 0x1A43, 0x1A47
};

/* WT Block & Fnum */

static const UINT16 ma_wt_block_100[128] = 
{
	0x0020, 0x0022, 0x0024, 0x0026, 0x0028, 0x002B, 0x002D, 0x0030,
	0x0033, 0x0036, 0x0039, 0x003C, 0x0040, 0x0044, 0x0048, 0x004C,
	0x0051, 0x0055, 0x005A, 0x0060, 0x0066, 0x006C, 0x0072, 0x0079,
	0x0080, 0x0088, 0x0090, 0x0098, 0x00A1, 0x00AB, 0x00B5, 0x00C0,
	0x00CB, 0x00D7, 0x00E4, 0x00F2, 0x0100, 0x010F, 0x011F, 0x0131,
	0x0143, 0x0156, 0x016A, 0x0180, 0x0196, 0x01AF, 0x01C8, 0x01E3,
	0x0200, 0x021F, 0x023F, 0x0261, 0x0285, 0x02AB, 0x02D4, 0x02FF,
	0x032D, 0x035D, 0x0390, 0x03C7, 0x0400, 0x043D, 0x047E, 0x04C2,
	0x050A, 0x0557, 0x05A8, 0x05FE, 0x065A, 0x06BA, 0x0721, 0x078D,
	0x0800, 0x087A, 0x08FB, 0x0984, 0x0A14, 0x0AAE, 0x0B51, 0x0BFD,
	0x0CB3, 0x0D75, 0x0E42, 0x0F1B, 0x1000, 0x10F4, 0x11F7, 0x1307,
	0x1429, 0x155C, 0x16A1, 0x17FA, 0x1967, 0x1AE9, 0x1C84, 0x1E35,
	0x2000, 0x21E9, 0x23ED, 0x260E, 0x2851, 0x2AB7, 0x2D43, 0x2FF3,
	0x32CD, 0x35D3, 0x3907, 0x3C6A, 0x4000, 0x43D1, 0x47DA, 0x4C1C,
	0x50A3, 0x556E, 0x5A85, 0x5FE7, 0x659A, 0x6BA5, 0x720E, 0x78D5,
	0x8000, 0x87A2, 0x8FB5, 0x9838, 0xA146, 0xAADD, 0xB50A, 0xBFCE
};

static const UINT16 ma_wt_block_50a[128] =
{
	0x00C5, 0x00CB, 0x00D1, 0x00D7, 0x00DE, 0x00E4, 0x00EB, 0x00F2,
	0x00F9, 0x0100, 0x0108, 0x010F, 0x0117, 0x011F, 0x0128, 0x0130,
	0x0139, 0x0143, 0x014C, 0x0156, 0x0160, 0x016A, 0x0175, 0x0180,
	0x018B, 0x0196, 0x01A2, 0x01AF, 0x01BB, 0x01C8, 0x01D6, 0x01E3,
	0x01F1, 0x0200, 0x020F, 0x021F, 0x022E, 0x023F, 0x0250, 0x0261,
	0x0273, 0x0285, 0x0298, 0x02AC, 0x02C0, 0x02D4, 0x02E9, 0x02FF,
	0x0316, 0x032D, 0x0345, 0x035D, 0x0376, 0x0390, 0x03AB, 0x03C7,
	0x03E3, 0x0400, 0x041E, 0x043D, 0x045D, 0x047E, 0x049F, 0x04C2,
	0x04E6, 0x050A, 0x0530, 0x0557, 0x057F, 0x05A8, 0x05D3, 0x05FE,
	0x062B, 0x065A, 0x0689, 0x06BA, 0x06ED, 0x0721, 0x0756, 0x078D,
	0x07C6, 0x0800, 0x083C, 0x087A, 0x08BA, 0x08FB, 0x093E, 0x0984,
	0x09CB, 0x0A15, 0x0A60, 0x0AAE, 0x0AFE, 0x0B51, 0x0BA6, 0x0BFD,
	0x0C57, 0x0CB3, 0x0D13, 0x0D75, 0x0DDA, 0x0E42, 0x0EAC, 0x0F1B,
	0x0F8C, 0x1000, 0x1078, 0x10F4, 0x1173, 0x11F6, 0x127D, 0x1308,
	0x1396, 0x1429, 0x14C0, 0x155C, 0x15FC, 0x16A1, 0x174B, 0x17FA,
	0x18AE, 0x1967, 0x1A25, 0x1AE9, 0x1BB3, 0x1C83, 0x1D59, 0x1E35
};

static const UINT16 ma_wt_block_50b[128] =
{
	0x003B, 0x003C, 0x003E, 0x0040, 0x0042, 0x0044, 0x0046, 0x0048,
	0x004A, 0x004C, 0x004E, 0x0051, 0x0053, 0x0055, 0x0058, 0x005B,
	0x005D, 0x0060, 0x0063, 0x0066, 0x0069, 0x006C, 0x006F, 0x0072,
	0x0075, 0x0079, 0x007C, 0x0080, 0x0084, 0x0088, 0x008C, 0x0090,
	0x0094, 0x0098, 0x009D, 0x00A1, 0x00A6, 0x00AB, 0x00B0, 0x00B5,
	0x00BA, 0x00C0, 0x00C5, 0x00CB, 0x00D1, 0x00D7, 0x00DE, 0x00E4,
	0x00EB, 0x00F2, 0x00F9, 0x0100, 0x0108, 0x010F, 0x0117, 0x011F,
	0x0128, 0x0130, 0x0139, 0x0143, 0x014C, 0x0156, 0x0160, 0x016A,
	0x0175, 0x0180, 0x018B, 0x0196, 0x01A2, 0x01AF, 0x01BB, 0x01C8,
	0x01D6, 0x01E3, 0x01F1, 0x0200, 0x020F, 0x021E, 0x022E, 0x023F,
	0x0250, 0x0261, 0x0273, 0x0285, 0x0298, 0x02AC, 0x02C0, 0x02D4,
	0x02E9, 0x02FF, 0x0316, 0x032D, 0x0345, 0x035D, 0x0376, 0x0390,
	0x03AB, 0x03C7, 0x03E3, 0x0400, 0x041E, 0x043D, 0x045D, 0x047E,
	0x049F, 0x04C2, 0x04E6, 0x050A, 0x0530, 0x0557, 0x057F, 0x05A8,
	0x05D3, 0x05FE, 0x062B, 0x065A, 0x0689, 0x06BA, 0x06ED, 0x0721,
	0x0756, 0x078D, 0x07C6, 0x0800, 0x083C, 0x087A, 0x08BA, 0x08FB
};

static const UINT16 ma_wt_block_50c[128] =
{
	0x0094, 0x0098, 0x009D, 0x00A1, 0x00A6, 0x00AB, 0x00B0, 0x00B5,
	0x00BA, 0x00C0, 0x00C5, 0x00CB, 0x00D1, 0x00D7, 0x00DE, 0x00E4,
	0x00EB, 0x00F2, 0x00F9, 0x0100, 0x0108, 0x010F, 0x0117, 0x011F,
	0x0128, 0x0130, 0x0139, 0x0143, 0x014C, 0x0156, 0x0160, 0x016A,
	0x0175, 0x0180, 0x018B, 0x0196, 0x01A2, 0x01AF, 0x01BB, 0x01C8,
	0x01D6, 0x01E3, 0x01F2, 0x0200, 0x020F, 0x021F, 0x022E, 0x023F,
	0x0250, 0x0261, 0x0273, 0x0285, 0x0298, 0x02AC, 0x02C0, 0x02D4,
	0x02E9, 0x02FF, 0x0316, 0x032D, 0x0345, 0x035D, 0x0376, 0x0390,
	0x03AB, 0x03C7, 0x03E3, 0x0400, 0x041E, 0x043D, 0x045D, 0x047E,
	0x049F, 0x04C2, 0x04E6, 0x050A, 0x0530, 0x0557, 0x057F, 0x05A8,
	0x05D3, 0x05FF, 0x062B, 0x065A, 0x0689, 0x06BA, 0x06ED, 0x0721,
	0x0756, 0x078D, 0x07C6, 0x0800, 0x083C, 0x087A, 0x08BA, 0x08FB,
	0x093F, 0x0984, 0x09CB, 0x0A15, 0x0A60, 0x0AAE, 0x0AFE, 0x0B51,
	0x0BA6, 0x0BFD, 0x0C57, 0x0CB4, 0x0D13, 0x0D75, 0x0DDA, 0x0E42,
	0x0EAD, 0x0F1B, 0x0F8C, 0x1001, 0x1079, 0x10F4, 0x1173, 0x11F6,
	0x127D, 0x1308, 0x1397, 0x1429, 0x14C1, 0x155C, 0x15FD, 0x16A2
};

static const UINT16 ma_wt_block_50[128] =
{
	0x00EB, 0x00F2, 0x00F9, 0x0100, 0x0108, 0x010F, 0x0117, 0x011F,
	0x0128, 0x0130, 0x0139, 0x0143, 0x014C, 0x0156, 0x0160, 0x016A,
	0x0175, 0x0180, 0x018B, 0x0196, 0x01A2, 0x01AF, 0x01BB, 0x01C8,
	0x01D6, 0x01E3, 0x01F1, 0x0200, 0x020F, 0x021E, 0x022E, 0x023F,
	0x0250, 0x0261, 0x0273, 0x0285, 0x0298, 0x02AC, 0x02C0, 0x02D4,
	0x02E9, 0x02FF, 0x0316, 0x032D, 0x0345, 0x035D, 0x0376, 0x0390,
	0x03AB, 0x03C7, 0x03E3, 0x0400, 0x041E, 0x043D, 0x045D, 0x047E,
	0x049F, 0x04C2, 0x04E6, 0x050A, 0x0530, 0x0557, 0x057F, 0x05A8,
	0x05D3, 0x05FE, 0x062B, 0x065A, 0x0689, 0x06BA, 0x06ED, 0x0721,
	0x0756, 0x078D, 0x07C6, 0x0800, 0x083C, 0x087A, 0x08BA, 0x08FB,
	0x093E, 0x0984, 0x09CB, 0x0A15, 0x0A60, 0x0AAE, 0x0AFE, 0x0B51,
	0x0BA5, 0x0BFD, 0x0C57, 0x0CB3, 0x0D13, 0x0D75, 0x0DDA, 0x0E41,
	0x0EAC, 0x0F1A, 0x0F8C, 0x1000, 0x1078, 0x10F4, 0x1173, 0x11F6,
	0x127D, 0x1307, 0x1396, 0x1429, 0x14C0, 0x155C, 0x15FC, 0x16A1,
	0x174B, 0x17FA, 0x18AE, 0x1967, 0x1A25, 0x1AE9, 0x1BB3, 0x1C83,
	0x1D59, 0x1E35, 0x1F18, 0x2001, 0x20F1, 0x21E8, 0x22E6, 0x23EC
};

static const UINT16 ma_wt_block_20[128] =
{
	0x0308, 0x0311, 0x031A, 0x0323, 0x032D, 0x0336, 0x0340, 0x0349,
	0x0353, 0x035D, 0x0367, 0x0371, 0x037C, 0x0386, 0x0390, 0x039B,
	0x03A6, 0x03B1, 0x03BC, 0x03C7, 0x03D2, 0x03DD, 0x03E9, 0x03F4,
	0x0400, 0x040C, 0x0418, 0x0424, 0x0431, 0x043D, 0x044A, 0x0456,
	0x0463, 0x0470, 0x047E, 0x048B, 0x0498, 0x04A6, 0x04B4, 0x04C2,
	0x04D0, 0x04DE, 0x04ED, 0x04FB, 0x050A, 0x0519, 0x0528, 0x0538,
	0x0547, 0x0557, 0x0567, 0x0577, 0x0587, 0x0598, 0x05A8, 0x05B9,
	0x05CA, 0x05DB, 0x05ED, 0x05FE, 0x0610, 0x0622, 0x0635, 0x0647,
	0x065A, 0x066D, 0x0680, 0x0693, 0x06A7, 0x06BA, 0x06CE, 0x06E3,
	0x06F7, 0x070C, 0x0721, 0x0736, 0x074B, 0x0761, 0x0777, 0x078D,
	0x07A4, 0x07BA, 0x07D1, 0x07E9, 0x0800, 0x0818, 0x0830, 0x0848,
	0x0861, 0x087A, 0x0893, 0x08AD, 0x08C7, 0x08E1, 0x08FB, 0x0916,
	0x0931, 0x094C, 0x0968, 0x0984, 0x09A0, 0x09BD, 0x09DA, 0x09F7,
	0x0A15, 0x0A33, 0x0A51, 0x0A70, 0x0A8F, 0x0AAE, 0x0ACE, 0x0AEE,
	0x0B0E, 0x0B2F, 0x0B51, 0x0B72, 0x0B94, 0x0BB7, 0x0BDA, 0x0BFD,
	0x0C20, 0x0C45, 0x0C69, 0x0C8E, 0x0CB3, 0x0CD9, 0x0CFF, 0x0D26
};

static const UINT16 ma_wt_block_5[128] = 
{
	0x0583, 0x0587, 0x058B, 0x058F, 0x0594, 0x0598, 0x059C, 0x05A0,
	0x05A4, 0x05A8, 0x05AC, 0x05B1, 0x05B5, 0x05B9, 0x05BD, 0x05C2,
	0x05C6, 0x05CA, 0x05CE, 0x05D3, 0x05D7, 0x05DB, 0x05E0, 0x05E4,
	0x05E8, 0x05ED, 0x05F1, 0x05F6, 0x05FA, 0x05FE, 0x0603, 0x0607,
	0x060C, 0x0610, 0x0615, 0x0619, 0x061E, 0x0622, 0x0627, 0x062B,
	0x0630, 0x0635, 0x0639, 0x063E, 0x0642, 0x0647, 0x064C, 0x0650,
	0x0655, 0x065A, 0x065E, 0x0663, 0x0668, 0x066D, 0x0671, 0x0676,
	0x067B, 0x0680, 0x0684, 0x0689, 0x068E, 0x0693, 0x0698, 0x069D,
	0x06A2, 0x06A7, 0x06AB, 0x06B0, 0x06B5, 0x06BA, 0x06BF, 0x06C4,
	0x06C9, 0x06CE, 0x06D3, 0x06D8, 0x06DD, 0x06E3, 0x06E8, 0x06ED,
	0x06F2, 0x06F7, 0x06FC, 0x0701, 0x0707, 0x070C, 0x0711, 0x0716,
	0x071B, 0x0721, 0x0726, 0x072B, 0x0731, 0x0736, 0x073B, 0x0741,
	0x0746, 0x074B, 0x0751, 0x0756, 0x075C, 0x0761, 0x0767, 0x076C,
	0x0772, 0x0777, 0x077D, 0x0782, 0x0788, 0x078D, 0x0793, 0x0798,
	0x079E, 0x07A4, 0x07A9, 0x07AF, 0x07B5, 0x07BA, 0x07C0, 0x07C6,
	0x07CC, 0x07D1, 0x07D7, 0x07DD, 0x07E3, 0x07E9, 0x07EF, 0x07F4
};

static const UINT16 ma_wt_block_10[128] = 
{
	0x0484, 0x048B, 0x0492, 0x0498, 0x049F, 0x04A6, 0x04AD, 0x04B4,
	0x04BB, 0x04C2, 0x04C9, 0x04D0, 0x04D7, 0x04DE, 0x04E6, 0x04ED,
	0x04F4, 0x04FB, 0x0503, 0x050A, 0x0512, 0x0519, 0x0521, 0x0528,
	0x0530, 0x0538, 0x0540, 0x0547, 0x054F, 0x0557, 0x055F, 0x0567,
	0x056F, 0x0577, 0x057F, 0x0587, 0x058F, 0x0598, 0x05A0, 0x05A8,
	0x05B1, 0x05B9, 0x05C2, 0x05CA, 0x05D3, 0x05DB, 0x05E4, 0x05ED,
	0x05F6, 0x05FE, 0x0607, 0x0610, 0x0619, 0x0622, 0x062B, 0x0635,
	0x063E, 0x0647, 0x0650, 0x065A, 0x0663, 0x066D, 0x0676, 0x0680,
	0x0689, 0x0693, 0x069D, 0x06A7, 0x06B0, 0x06BA, 0x06C4, 0x06CE,
	0x06D8, 0x06E3, 0x06ED, 0x06F7, 0x0701, 0x070C, 0x0716, 0x0721,
	0x072B, 0x0736, 0x0741, 0x074B, 0x0756, 0x0761, 0x076C, 0x0777,
	0x0782, 0x078D, 0x0798, 0x07A4, 0x07AF, 0x07BA, 0x07C6, 0x07D1,
	0x07DD, 0x07E9, 0x07F4, 0x0800, 0x080C, 0x0818, 0x0824, 0x0830,
	0x083C, 0x0848, 0x0855, 0x0861, 0x086D, 0x087A, 0x0887, 0x0893,
	0x08A0, 0x08AD, 0x08BA, 0x08C7, 0x08D4, 0x08E1, 0x08EE, 0x08FB,
	0x0908, 0x0916, 0x0923, 0x0931, 0x093E, 0x094C, 0x095A, 0x0968
};

/* Pitch Bend */

static const UINT16 ma_pitchbend[25][128] = 
{
	/* range = 0 */
	{
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400,
		0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400, 0x0400
	},
	/* range = 1 */
	{
		0x03C7, 0x03C7, 0x03C8, 0x03C9, 0x03CA, 0x03CB, 0x03CC, 0x03CD,
		0x03CE, 0x03CE, 0x03CF, 0x03D0, 0x03D1, 0x03D2, 0x03D3, 0x03D4,
		0x03D5, 0x03D5, 0x03D6, 0x03D7, 0x03D8, 0x03D9, 0x03DA, 0x03DB,
		0x03DC, 0x03DD, 0x03DD, 0x03DE, 0x03DF, 0x03E0, 0x03E1, 0x03E2,
		0x03E3, 0x03E4, 0x03E5, 0x03E6, 0x03E6, 0x03E7, 0x03E8, 0x03E9,
		0x03EA, 0x03EB, 0x03EC, 0x03ED, 0x03EE, 0x03EF, 0x03EF, 0x03F0,
		0x03F1, 0x03F2, 0x03F3, 0x03F4, 0x03F5, 0x03F6, 0x03F7, 0x03F8,
		0x03F9, 0x03FA, 0x03FA, 0x03FB, 0x03FC, 0x03FD, 0x03FE, 0x03FF,
		0x0400, 0x0401, 0x0402, 0x0403, 0x0404, 0x0405, 0x0406, 0x0406,
		0x0407, 0x0408, 0x0409, 0x040A, 0x040B, 0x040C, 0x040D, 0x040E,
		0x040F, 0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0415,
		0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x041C, 0x041D,
		0x041E, 0x041F, 0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425,
		0x0426, 0x0427, 0x0428, 0x0429, 0x0429, 0x042A, 0x042B, 0x042C,
		0x042D, 0x042E, 0x042F, 0x0430, 0x0431, 0x0432, 0x0433, 0x0434,
		0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x043D
	},
	/* range = 2 */
	{
		0x0390, 0x0392, 0x0394, 0x0395, 0x0397, 0x0399, 0x039A, 0x039C,
		0x039E, 0x039F, 0x03A1, 0x03A3, 0x03A4, 0x03A6, 0x03A8, 0x03A9,
		0x03AB, 0x03AD, 0x03AE, 0x03B0, 0x03B2, 0x03B4, 0x03B5, 0x03B7,
		0x03B9, 0x03BA, 0x03BC, 0x03BE, 0x03C0, 0x03C1, 0x03C3, 0x03C5,
		0x03C7, 0x03C8, 0x03CA, 0x03CC, 0x03CE, 0x03CF, 0x03D1, 0x03D3,
		0x03D5, 0x03D6, 0x03D8, 0x03DA, 0x03DC, 0x03DD, 0x03DF, 0x03E1,
		0x03E3, 0x03E5, 0x03E6, 0x03E8, 0x03EA, 0x03EC, 0x03EE, 0x03EF,
		0x03F1, 0x03F3, 0x03F5, 0x03F7, 0x03F9, 0x03FA, 0x03FC, 0x03FE,
		0x0400, 0x0402, 0x0404, 0x0406, 0x0407, 0x0409, 0x040B, 0x040D,
		0x040F, 0x0411, 0x0413, 0x0415, 0x0416, 0x0418, 0x041A, 0x041C,
		0x041E, 0x0420, 0x0422, 0x0424, 0x0426, 0x0428, 0x0429, 0x042B,
		0x042D, 0x042F, 0x0431, 0x0433, 0x0435, 0x0437, 0x0439, 0x043B,
		0x043D, 0x043F, 0x0441, 0x0443, 0x0445, 0x0447, 0x0449, 0x044B,
		0x044D, 0x044F, 0x0451, 0x0453, 0x0455, 0x0457, 0x0459, 0x045B,
		0x045D, 0x045F, 0x0461, 0x0463, 0x0465, 0x0467, 0x0469, 0x046B,
		0x046D, 0x046F, 0x0471, 0x0473, 0x0475, 0x0477, 0x0479, 0x047D
	},
	/* range = 3 */
	{
		0x035D, 0x035F, 0x0362, 0x0364, 0x0366, 0x0369, 0x036B, 0x036E,
		0x0370, 0x0372, 0x0375, 0x0377, 0x037A, 0x037C, 0x037E, 0x0381,
		0x0383, 0x0386, 0x0388, 0x038B, 0x038D, 0x038F, 0x0392, 0x0394,
		0x0397, 0x0399, 0x039C, 0x039E, 0x03A1, 0x03A3, 0x03A6, 0x03A8,
		0x03AB, 0x03AE, 0x03B0, 0x03B3, 0x03B5, 0x03B8, 0x03BA, 0x03BD,
		0x03C0, 0x03C2, 0x03C5, 0x03C7, 0x03CA, 0x03CD, 0x03CF, 0x03D2,
		0x03D5, 0x03D7, 0x03DA, 0x03DD, 0x03DF, 0x03E2, 0x03E5, 0x03E7,
		0x03EA, 0x03ED, 0x03EF, 0x03F2, 0x03F5, 0x03F8, 0x03FA, 0x03FD,
		0x0400, 0x0403, 0x0406, 0x0408, 0x040B, 0x040E, 0x0411, 0x0414,
		0x0416, 0x0419, 0x041C, 0x041F, 0x0422, 0x0425, 0x0428, 0x042A,
		0x042D, 0x0430, 0x0433, 0x0436, 0x0439, 0x043C, 0x043F, 0x0442,
		0x0445, 0x0448, 0x044B, 0x044E, 0x0451, 0x0454, 0x0457, 0x045A,
		0x045D, 0x0460, 0x0463, 0x0466, 0x0469, 0x046C, 0x046F, 0x0472,
		0x0475, 0x0478, 0x047B, 0x047E, 0x0482, 0x0485, 0x0488, 0x048B,
		0x048E, 0x0491, 0x0494, 0x0498, 0x049B, 0x049E, 0x04A1, 0x04A4,
		0x04A8, 0x04AB, 0x04AE, 0x04B1, 0x04B5, 0x04B8, 0x04BB, 0x04C2
	},
	/* range = 4 */
	{
		0x032D, 0x0330, 0x0333, 0x0336, 0x0339, 0x033C, 0x033F, 0x0342,
		0x0345, 0x0348, 0x034B, 0x034E, 0x0351, 0x0354, 0x0357, 0x035A,
		0x035D, 0x0360, 0x0363, 0x0366, 0x036A, 0x036D, 0x0370, 0x0373,
		0x0376, 0x037A, 0x037D, 0x0380, 0x0383, 0x0386, 0x038A, 0x038D,
		0x0390, 0x0394, 0x0397, 0x039A, 0x039E, 0x03A1, 0x03A4, 0x03A8,
		0x03AB, 0x03AE, 0x03B2, 0x03B5, 0x03B9, 0x03BC, 0x03C0, 0x03C3,
		0x03C7, 0x03CA, 0x03CE, 0x03D1, 0x03D5, 0x03D8, 0x03DC, 0x03DF,
		0x03E3, 0x03E6, 0x03EA, 0x03EE, 0x03F1, 0x03F5, 0x03F9, 0x03FC,
		0x0400, 0x0404, 0x0407, 0x040B, 0x040F, 0x0413, 0x0416, 0x041A,
		0x041E, 0x0422, 0x0426, 0x0429, 0x042D, 0x0431, 0x0435, 0x0439,
		0x043D, 0x0441, 0x0445, 0x0449, 0x044D, 0x0451, 0x0455, 0x0459,
		0x045D, 0x0461, 0x0465, 0x0469, 0x046D, 0x0471, 0x0475, 0x0479,
		0x047D, 0x0482, 0x0486, 0x048A, 0x048E, 0x0492, 0x0497, 0x049B,
		0x049F, 0x04A3, 0x04A8, 0x04AC, 0x04B0, 0x04B5, 0x04B9, 0x04BD,
		0x04C2, 0x04C6, 0x04CB, 0x04CF, 0x04D3, 0x04D8, 0x04DC, 0x04E1,
		0x04E5, 0x04EA, 0x04EF, 0x04F3, 0x04F8, 0x04FC, 0x0501, 0x050A
	},
	/* range = 5 */
	{
		0x02FF, 0x0303, 0x0306, 0x030A, 0x030D, 0x0311, 0x0314, 0x0318,
		0x031B, 0x031F, 0x0323, 0x0326, 0x032A, 0x032D, 0x0331, 0x0335,
		0x0339, 0x033C, 0x0340, 0x0344, 0x0348, 0x034B, 0x034F, 0x0353,
		0x0357, 0x035B, 0x035F, 0x0363, 0x0366, 0x036A, 0x036E, 0x0372,
		0x0376, 0x037A, 0x037E, 0x0382, 0x0386, 0x038B, 0x038F, 0x0393,
		0x0397, 0x039B, 0x039F, 0x03A3, 0x03A8, 0x03AC, 0x03B0, 0x03B4,
		0x03B9, 0x03BD, 0x03C1, 0x03C6, 0x03CA, 0x03CE, 0x03D3, 0x03D7,
		0x03DC, 0x03E0, 0x03E5, 0x03E9, 0x03EE, 0x03F2, 0x03F7, 0x03FB,
		0x0400, 0x0405, 0x0409, 0x040E, 0x0413, 0x0417, 0x041C, 0x0421,
		0x0426, 0x042A, 0x042F, 0x0434, 0x0439, 0x043E, 0x0443, 0x0448,
		0x044D, 0x0452, 0x0457, 0x045C, 0x0461, 0x0466, 0x046B, 0x0470,
		0x0475, 0x047A, 0x047F, 0x0485, 0x048A, 0x048F, 0x0494, 0x049A,
		0x049F, 0x04A4, 0x04AA, 0x04AF, 0x04B5, 0x04BA, 0x04C0, 0x04C5,
		0x04CB, 0x04D0, 0x04D6, 0x04DB, 0x04E1, 0x04E7, 0x04EC, 0x04F2,
		0x04F8, 0x04FD, 0x0503, 0x0509, 0x050F, 0x0515, 0x051B, 0x0520,
		0x0526, 0x052C, 0x0532, 0x0538, 0x053E, 0x0544, 0x054B, 0x0557
	},
	/* range = 6 */
	{
		0x02D4, 0x02D8, 0x02DC, 0x02E0, 0x02E4, 0x02E8, 0x02EC, 0x02F0,
		0x02F4, 0x02F8, 0x02FC, 0x0301, 0x0305, 0x0309, 0x030D, 0x0311,
		0x0316, 0x031A, 0x031E, 0x0323, 0x0327, 0x032B, 0x0330, 0x0334,
		0x0339, 0x033D, 0x0342, 0x0346, 0x034B, 0x034F, 0x0354, 0x0358,
		0x035D, 0x0362, 0x0366, 0x036B, 0x0370, 0x0375, 0x037A, 0x037E,
		0x0383, 0x0388, 0x038D, 0x0392, 0x0397, 0x039C, 0x03A1, 0x03A6,
		0x03AB, 0x03B0, 0x03B5, 0x03BA, 0x03C0, 0x03C5, 0x03CA, 0x03CF,
		0x03D5, 0x03DA, 0x03DF, 0x03E5, 0x03EA, 0x03EF, 0x03F5, 0x03FA,
		0x0400, 0x0406, 0x040B, 0x0411, 0x0416, 0x041C, 0x0422, 0x0428,
		0x042D, 0x0433, 0x0439, 0x043F, 0x0445, 0x044B, 0x0451, 0x0457,
		0x045D, 0x0463, 0x0469, 0x046F, 0x0475, 0x047B, 0x0482, 0x0488,
		0x048E, 0x0494, 0x049B, 0x04A1, 0x04A8, 0x04AE, 0x04B5, 0x04BB,
		0x04C2, 0x04C8, 0x04CF, 0x04D6, 0x04DC, 0x04E3, 0x04EA, 0x04F1,
		0x04F8, 0x04FF, 0x0506, 0x050C, 0x0514, 0x051B, 0x0522, 0x0529,
		0x0530, 0x0537, 0x053E, 0x0546, 0x054D, 0x0554, 0x055C, 0x0563,
		0x056B, 0x0572, 0x057A, 0x0581, 0x0589, 0x0591, 0x0599, 0x05A8
	},
	/* range = 7 */
	{
		0x02AB, 0x02B0, 0x02B4, 0x02B9, 0x02BD, 0x02C1, 0x02C6, 0x02CA,
		0x02CF, 0x02D3, 0x02D8, 0x02DD, 0x02E1, 0x02E6, 0x02EB, 0x02EF,
		0x02F4, 0x02F9, 0x02FE, 0x0303, 0x0307, 0x030C, 0x0311, 0x0316,
		0x031B, 0x0320, 0x0325, 0x032B, 0x0330, 0x0335, 0x033A, 0x033F,
		0x0345, 0x034A, 0x034F, 0x0355, 0x035A, 0x035F, 0x0365, 0x036A,
		0x0370, 0x0376, 0x037B, 0x0381, 0x0386, 0x038C, 0x0392, 0x0398,
		0x039E, 0x03A3, 0x03A9, 0x03AF, 0x03B5, 0x03BB, 0x03C1, 0x03C7,
		0x03CE, 0x03D4, 0x03DA, 0x03E0, 0x03E6, 0x03ED, 0x03F3, 0x03FA,
		0x0400, 0x0406, 0x040D, 0x0414, 0x041A, 0x0421, 0x0428, 0x042E,
		0x0435, 0x043C, 0x0443, 0x044A, 0x0451, 0x0458, 0x045F, 0x0466,
		0x046D, 0x0474, 0x047B, 0x0483, 0x048A, 0x0491, 0x0499, 0x04A0,
		0x04A8, 0x04AF, 0x04B7, 0x04BE, 0x04C6, 0x04CE, 0x04D6, 0x04DE,
		0x04E5, 0x04ED, 0x04F5, 0x04FD, 0x0506, 0x050E, 0x0516, 0x051E,
		0x0526, 0x052F, 0x0537, 0x0540, 0x0548, 0x0551, 0x0559, 0x0562,
		0x056B, 0x0574, 0x057C, 0x0585, 0x058E, 0x0597, 0x05A0, 0x05A9,
		0x05B3, 0x05BC, 0x05C5, 0x05CF, 0x05D8, 0x05E1, 0x05EB, 0x05FE
	},
	/* range = 8 */
	{
		0x0285, 0x028A, 0x028E, 0x0293, 0x0298, 0x029D, 0x02A2, 0x02A7,
		0x02AB, 0x02B0, 0x02B5, 0x02BA, 0x02BF, 0x02C5, 0x02CA, 0x02CF,
		0x02D4, 0x02D9, 0x02DF, 0x02E4, 0x02E9, 0x02EF, 0x02F4, 0x02FA,
		0x02FF, 0x0305, 0x030A, 0x0310, 0x0316, 0x031B, 0x0321, 0x0327,
		0x032D, 0x0333, 0x0339, 0x033F, 0x0345, 0x034B, 0x0351, 0x0357,
		0x035D, 0x0363, 0x036A, 0x0370, 0x0376, 0x037D, 0x0383, 0x038A,
		0x0390, 0x0397, 0x039E, 0x03A4, 0x03AB, 0x03B2, 0x03B9, 0x03C0,
		0x03C7, 0x03CE, 0x03D5, 0x03DC, 0x03E3, 0x03EA, 0x03F1, 0x03F9,
		0x0400, 0x0407, 0x040F, 0x0416, 0x041E, 0x0426, 0x042D, 0x0435,
		0x043D, 0x0445, 0x044D, 0x0455, 0x045D, 0x0465, 0x046D, 0x0475,
		0x047D, 0x0486, 0x048E, 0x0497, 0x049F, 0x04A8, 0x04B0, 0x04B9,
		0x04C2, 0x04CB, 0x04D3, 0x04DC, 0x04E5, 0x04EF, 0x04F8, 0x0501,
		0x050A, 0x0514, 0x051D, 0x0526, 0x0530, 0x053A, 0x0543, 0x054D,
		0x0557, 0x0561, 0x056B, 0x0575, 0x057F, 0x0589, 0x0593, 0x059E,
		0x05A8, 0x05B3, 0x05BD, 0x05C8, 0x05D3, 0x05DD, 0x05E8, 0x05F3,
		0x05FE, 0x0609, 0x0615, 0x0620, 0x062B, 0x0637, 0x0642, 0x0659
	},
	/* range = 9 */
	{
		0x0261, 0x0266, 0x026B, 0x0270, 0x0275, 0x027A, 0x027F, 0x0284,
		0x028A, 0x028F, 0x0294, 0x029A, 0x029F, 0x02A5, 0x02AA, 0x02B0,
		0x02B5, 0x02BB, 0x02C1, 0x02C6, 0x02CC, 0x02D2, 0x02D8, 0x02DE,
		0x02E4, 0x02EA, 0x02F0, 0x02F6, 0x02FC, 0x0303, 0x0309, 0x030F,
		0x0316, 0x031C, 0x0323, 0x0329, 0x0330, 0x0336, 0x033D, 0x0344,
		0x034B, 0x0351, 0x0358, 0x035F, 0x0366, 0x036E, 0x0375, 0x037C,
		0x0383, 0x038B, 0x0392, 0x0399, 0x03A1, 0x03A8, 0x03B0, 0x03B8,
		0x03C0, 0x03C7, 0x03CF, 0x03D7, 0x03DF, 0x03E7, 0x03EF, 0x03F8,
		0x0400, 0x0408, 0x0411, 0x0419, 0x0422, 0x042A, 0x0433, 0x043C,
		0x0445, 0x044E, 0x0457, 0x0460, 0x0469, 0x0472, 0x047B, 0x0485,
		0x048E, 0x0498, 0x04A1, 0x04AB, 0x04B5, 0x04BE, 0x04C8, 0x04D2,
		0x04DC, 0x04E7, 0x04F1, 0x04FB, 0x0506, 0x0510, 0x051B, 0x0525,
		0x0530, 0x053B, 0x0546, 0x0551, 0x055C, 0x0567, 0x0572, 0x057E,
		0x0589, 0x0595, 0x05A0, 0x05AC, 0x05B8, 0x05C4, 0x05D0, 0x05DC,
		0x05E8, 0x05F5, 0x0601, 0x060E, 0x061A, 0x0627, 0x0634, 0x0641,
		0x064E, 0x065B, 0x0668, 0x0676, 0x0683, 0x0691, 0x069E, 0x06BA
	},
	/* range = 10 */
	{
		0x023F, 0x0244, 0x0249, 0x024E, 0x0254, 0x0259, 0x025F, 0x0264,
		0x026A, 0x026F, 0x0275, 0x027B, 0x0280, 0x0286, 0x028C, 0x0292,
		0x0298, 0x029E, 0x02A4, 0x02AA, 0x02B0, 0x02B7, 0x02BD, 0x02C3,
		0x02CA, 0x02D0, 0x02D7, 0x02DD, 0x02E4, 0x02EB, 0x02F1, 0x02F8,
		0x02FF, 0x0306, 0x030D, 0x0314, 0x031B, 0x0323, 0x032A, 0x0331,
		0x0339, 0x0340, 0x0348, 0x034F, 0x0357, 0x035F, 0x0366, 0x036E,
		0x0376, 0x037E, 0x0386, 0x038F, 0x0397, 0x039F, 0x03A8, 0x03B0,
		0x03B9, 0x03C1, 0x03CA, 0x03D3, 0x03DC, 0x03E5, 0x03EE, 0x03F7,
		0x0400, 0x0409, 0x0413, 0x041C, 0x0426, 0x042F, 0x0439, 0x0443,
		0x044D, 0x0457, 0x0461, 0x046B, 0x0475, 0x047F, 0x048A, 0x0494,
		0x049F, 0x04AA, 0x04B5, 0x04C0, 0x04CB, 0x04D6, 0x04E1, 0x04EC,
		0x04F8, 0x0503, 0x050F, 0x051B, 0x0526, 0x0532, 0x053E, 0x054B,
		0x0557, 0x0563, 0x0570, 0x057C, 0x0589, 0x0596, 0x05A3, 0x05B0,
		0x05BD, 0x05CB, 0x05D8, 0x05E6, 0x05F3, 0x0601, 0x060F, 0x061D,
		0x062B, 0x063A, 0x0648, 0x0657, 0x0665, 0x0674, 0x0683, 0x0692,
		0x06A1, 0x06B1, 0x06C0, 0x06D0, 0x06E0, 0x06F0, 0x0700, 0x0721
	},
	/* range = 11 */
	{
		0x021E, 0x0224, 0x0229, 0x022F, 0x0234, 0x023A, 0x0240, 0x0245,
		0x024B, 0x0251, 0x0257, 0x025D, 0x0263, 0x0269, 0x026F, 0x0276,
		0x027C, 0x0282, 0x0289, 0x028F, 0x0296, 0x029C, 0x02A3, 0x02AA,
		0x02B0, 0x02B7, 0x02BE, 0x02C5, 0x02CC, 0x02D3, 0x02DB, 0x02E2,
		0x02E9, 0x02F1, 0x02F8, 0x0300, 0x0307, 0x030F, 0x0317, 0x031F,
		0x0327, 0x032F, 0x0337, 0x033F, 0x0348, 0x0350, 0x0358, 0x0361,
		0x036A, 0x0372, 0x037B, 0x0384, 0x038D, 0x0396, 0x039F, 0x03A8,
		0x03B2, 0x03BB, 0x03C5, 0x03CE, 0x03D8, 0x03E2, 0x03EC, 0x03F6,
		0x0400, 0x040A, 0x0415, 0x041F, 0x0429, 0x0434, 0x043F, 0x044A,
		0x0455, 0x0460, 0x046B, 0x0476, 0x0482, 0x048D, 0x0499, 0x04A4,
		0x04B0, 0x04BC, 0x04C8, 0x04D5, 0x04E1, 0x04ED, 0x04FA, 0x0507,
		0x0514, 0x0520, 0x052E, 0x053B, 0x0548, 0x0556, 0x0563, 0x0571,
		0x057F, 0x058D, 0x059B, 0x05A9, 0x05B8, 0x05C7, 0x05D5, 0x05E4,
		0x05F3, 0x0602, 0x0612, 0x0621, 0x0631, 0x0641, 0x0651, 0x0661,
		0x0671, 0x0682, 0x0692, 0x06A3, 0x06B4, 0x06C5, 0x06D6, 0x06E8,
		0x06F9, 0x070B, 0x071D, 0x072F, 0x0742, 0x0754, 0x0767, 0x078D
	},
	/* range = 12 */
	{
		0x0200, 0x0206, 0x020B, 0x0211, 0x0217, 0x021C, 0x0222, 0x0228,
		0x022E, 0x0234, 0x023B, 0x0241, 0x0247, 0x024D, 0x0254, 0x025A,
		0x0261, 0x0268, 0x026E, 0x0275, 0x027C, 0x0283, 0x028A, 0x0291,
		0x0298, 0x029F, 0x02A7, 0x02AE, 0x02B5, 0x02BD, 0x02C5, 0x02CC,
		0x02D4, 0x02DC, 0x02E4, 0x02EC, 0x02F4, 0x02FC, 0x0305, 0x030D,
		0x0316, 0x031E, 0x0327, 0x0330, 0x0339, 0x0342, 0x034B, 0x0354,
		0x035D, 0x0366, 0x0370, 0x037A, 0x0383, 0x038D, 0x0397, 0x03A1,
		0x03AB, 0x03B5, 0x03C0, 0x03CA, 0x03D5, 0x03DF, 0x03EA, 0x03F5,
		0x0400, 0x040B, 0x0416, 0x0422, 0x042D, 0x0439, 0x0445, 0x0451,
		0x045D, 0x0469, 0x0475, 0x0482, 0x048E, 0x049B, 0x04A8, 0x04B5,
		0x04C2, 0x04CF, 0x04DC, 0x04EA, 0x04F8, 0x0506, 0x0514, 0x0522,
		0x0530, 0x053E, 0x054D, 0x055C, 0x056B, 0x057A, 0x0589, 0x0599,
		0x05A8, 0x05B8, 0x05C8, 0x05D8, 0x05E8, 0x05F9, 0x0609, 0x061A,
		0x062B, 0x063C, 0x064E, 0x065F, 0x0671, 0x0683, 0x0695, 0x06A8,
		0x06BA, 0x06CD, 0x06E0, 0x06F3, 0x0706, 0x071A, 0x072E, 0x0742,
		0x0756, 0x076A, 0x077F, 0x0794, 0x07A9, 0x07BF, 0x07D4, 0x0800
	},
	/* range = 13 */
	{
		0x01E3, 0x01E9, 0x01EF, 0x01F5, 0x01FA, 0x0200, 0x0207, 0x020D,
		0x0213, 0x0219, 0x021F, 0x0226, 0x022C, 0x0233, 0x023A, 0x0240,
		0x0247, 0x024E, 0x0255, 0x025C, 0x0263, 0x026A, 0x0272, 0x0279,
		0x0280, 0x0288, 0x0290, 0x0297, 0x029F, 0x02A7, 0x02AF, 0x02B7,
		0x02BF, 0x02C8, 0x02D0, 0x02D9, 0x02E1, 0x02EA, 0x02F3, 0x02FC,
		0x0305, 0x030E, 0x0317, 0x0320, 0x032A, 0x0333, 0x033D, 0x0347,
		0x0351, 0x035B, 0x0365, 0x036F, 0x037A, 0x0384, 0x038F, 0x0399,
		0x03A4, 0x03AF, 0x03BA, 0x03C6, 0x03D1, 0x03DD, 0x03E8, 0x03F4,
		0x0400, 0x040C, 0x0418, 0x0425, 0x0431, 0x043E, 0x044B, 0x0458,
		0x0465, 0x0472, 0x047F, 0x048D, 0x049B, 0x04A9, 0x04B7, 0x04C5,
		0x04D3, 0x04E2, 0x04F1, 0x0500, 0x050F, 0x051E, 0x052E, 0x053D,
		0x054D, 0x055D, 0x056D, 0x057E, 0x058E, 0x059F, 0x05B0, 0x05C1,
		0x05D3, 0x05E4, 0x05F6, 0x0608, 0x061A, 0x062D, 0x063F, 0x0652,
		0x0665, 0x0679, 0x068C, 0x06A0, 0x06B4, 0x06C8, 0x06DD, 0x06F1,
		0x0706, 0x071C, 0x0731, 0x0747, 0x075D, 0x0773, 0x078A, 0x07A0,
		0x07B7, 0x07CF, 0x07E6, 0x07FE, 0x0816, 0x082F, 0x0847, 0x087A
	},
	/* range = 14 */
	{
		0x01C8, 0x01CE, 0x01D4, 0x01DA, 0x01E0, 0x01E6, 0x01EC, 0x01F2,
		0x01F9, 0x01FF, 0x0206, 0x020C, 0x0213, 0x021A, 0x0220, 0x0227,
		0x022E, 0x0235, 0x023D, 0x0244, 0x024B, 0x0253, 0x025A, 0x0262,
		0x026A, 0x0272, 0x027A, 0x0282, 0x028A, 0x0292, 0x029A, 0x02A3,
		0x02AB, 0x02B4, 0x02BD, 0x02C6, 0x02CF, 0x02D8, 0x02E1, 0x02EB,
		0x02F4, 0x02FE, 0x0307, 0x0311, 0x031B, 0x0325, 0x0330, 0x033A,
		0x0345, 0x034F, 0x035A, 0x0365, 0x0370, 0x037B, 0x0386, 0x0392,
		0x039E, 0x03A9, 0x03B5, 0x03C1, 0x03CE, 0x03DA, 0x03E6, 0x03F3,
		0x0400, 0x040D, 0x041A, 0x0428, 0x0435, 0x0443, 0x0451, 0x045F,
		0x046D, 0x047B, 0x048A, 0x0499, 0x04A8, 0x04B7, 0x04C6, 0x04D6,
		0x04E5, 0x04F5, 0x0506, 0x0516, 0x0526, 0x0537, 0x0548, 0x0559,
		0x056B, 0x057C, 0x058E, 0x05A0, 0x05B3, 0x05C5, 0x05D8, 0x05EB,
		0x05FE, 0x0612, 0x0626, 0x063A, 0x064E, 0x0662, 0x0677, 0x068C,
		0x06A1, 0x06B7, 0x06CD, 0x06E3, 0x06F9, 0x0710, 0x0727, 0x073E,
		0x0756, 0x076E, 0x0786, 0x079F, 0x07B7, 0x07D1, 0x07EA, 0x0804,
		0x081E, 0x0838, 0x0853, 0x086E, 0x088A, 0x08A5, 0x08C1, 0x08FB
	},
	/* range = 15 */
	{
		0x01AF, 0x01B4, 0x01BA, 0x01C0, 0x01C6, 0x01CD, 0x01D3, 0x01D9,
		0x01E0, 0x01E6, 0x01ED, 0x01F4, 0x01FA, 0x0201, 0x0208, 0x020F,
		0x0217, 0x021E, 0x0225, 0x022D, 0x0234, 0x023C, 0x0244, 0x024C,
		0x0254, 0x025C, 0x0264, 0x026D, 0x0275, 0x027E, 0x0286, 0x028F,
		0x0298, 0x02A1, 0x02AA, 0x02B4, 0x02BD, 0x02C6, 0x02D0, 0x02DA,
		0x02E4, 0x02EE, 0x02F8, 0x0303, 0x030D, 0x0318, 0x0323, 0x032D,
		0x0339, 0x0344, 0x034F, 0x035B, 0x0366, 0x0372, 0x037E, 0x038B,
		0x0397, 0x03A3, 0x03B0, 0x03BD, 0x03CA, 0x03D7, 0x03E5, 0x03F2,
		0x0400, 0x040E, 0x041C, 0x042A, 0x0439, 0x0448, 0x0457, 0x0466,
		0x0475, 0x0485, 0x0494, 0x04A4, 0x04B5, 0x04C5, 0x04D6, 0x04E7,
		0x04F8, 0x0509, 0x051B, 0x052C, 0x053E, 0x0551, 0x0563, 0x0576,
		0x0589, 0x059C, 0x05B0, 0x05C4, 0x05D8, 0x05EC, 0x0601, 0x0616,
		0x062B, 0x0641, 0x0657, 0x066D, 0x0683, 0x069A, 0x06B1, 0x06C8,
		0x06E0, 0x06F8, 0x0710, 0x0729, 0x0742, 0x075B, 0x0775, 0x078F,
		0x07A9, 0x07C4, 0x07DF, 0x07FA, 0x0816, 0x0833, 0x084F, 0x086C,
		0x088A, 0x08A7, 0x08C5, 0x08E4, 0x0903, 0x0923, 0x0942, 0x0983
	},
	/* range = 16 */
	{
		0x0196, 0x019C, 0x01A2, 0x01A8, 0x01AF, 0x01B5, 0x01BB, 0x01C2,
		0x01C8, 0x01CF, 0x01D6, 0x01DC, 0x01E3, 0x01EA, 0x01F1, 0x01F9,
		0x0200, 0x0207, 0x020F, 0x0217, 0x021E, 0x0226, 0x022E, 0x0236,
		0x023F, 0x0247, 0x0250, 0x0258, 0x0261, 0x026A, 0x0273, 0x027C,
		0x0285, 0x028E, 0x0298, 0x02A2, 0x02AB, 0x02B5, 0x02BF, 0x02CA,
		0x02D4, 0x02DF, 0x02E9, 0x02F4, 0x02FF, 0x030A, 0x0316, 0x0321,
		0x032D, 0x0339, 0x0345, 0x0351, 0x035D, 0x036A, 0x0376, 0x0383,
		0x0390, 0x039E, 0x03AB, 0x03B9, 0x03C7, 0x03D5, 0x03E3, 0x03F1,
		0x0400, 0x040F, 0x041E, 0x042D, 0x043D, 0x044D, 0x045D, 0x046D,
		0x047D, 0x048E, 0x049F, 0x04B0, 0x04C2, 0x04D3, 0x04E5, 0x04F8,
		0x050A, 0x051D, 0x0530, 0x0543, 0x0557, 0x056B, 0x057F, 0x0593,
		0x05A8, 0x05BD, 0x05D3, 0x05E8, 0x05FE, 0x0615, 0x062B, 0x0642,
		0x0659, 0x0671, 0x0689, 0x06A1, 0x06BA, 0x06D3, 0x06ED, 0x0706,
		0x0721, 0x073B, 0x0756, 0x0771, 0x078D, 0x07A9, 0x07C6, 0x07E3,
		0x0800, 0x081E, 0x083C, 0x085B, 0x087A, 0x0899, 0x08B9, 0x08DA,
		0x08FB, 0x091C, 0x093E, 0x0961, 0x0983, 0x09A7, 0x09CB, 0x0A14
	},
	/* range = 17 */
	{
		0x0180, 0x0185, 0x018C, 0x0192, 0x0198, 0x019E, 0x01A5, 0x01AB,
		0x01B2, 0x01B8, 0x01BF, 0x01C6, 0x01CD, 0x01D4, 0x01DB, 0x01E3,
		0x01EA, 0x01F2, 0x01FA, 0x0201, 0x0209, 0x0211, 0x021A, 0x0222,
		0x022A, 0x0233, 0x023C, 0x0244, 0x024D, 0x0257, 0x0260, 0x0269,
		0x0273, 0x027C, 0x0286, 0x0290, 0x029A, 0x02A5, 0x02AF, 0x02BA,
		0x02C5, 0x02D0, 0x02DB, 0x02E6, 0x02F1, 0x02FD, 0x0309, 0x0315,
		0x0321, 0x032D, 0x033A, 0x0347, 0x0354, 0x0361, 0x036E, 0x037C,
		0x038A, 0x0398, 0x03A6, 0x03B4, 0x03C3, 0x03D2, 0x03E1, 0x03F0,
		0x0400, 0x0410, 0x0420, 0x0430, 0x0441, 0x0452, 0x0463, 0x0474,
		0x0486, 0x0498, 0x04AA, 0x04BC, 0x04CF, 0x04E2, 0x04F5, 0x0509,
		0x051D, 0x0531, 0x0546, 0x055B, 0x0570, 0x0585, 0x059B, 0x05B1,
		0x05C8, 0x05DF, 0x05F6, 0x060E, 0x0626, 0x063E, 0x0657, 0x0670,
		0x0689, 0x06A3, 0x06BD, 0x06D8, 0x06F3, 0x070F, 0x072A, 0x0747,
		0x0764, 0x0781, 0x079F, 0x07BD, 0x07DB, 0x07FA, 0x081A, 0x083A,
		0x085B, 0x087C, 0x089D, 0x08BF, 0x08E2, 0x0905, 0x0929, 0x094D,
		0x0972, 0x0997, 0x09BD, 0x09E4, 0x0A0B, 0x0A33, 0x0A5B, 0x0AAE
	},
	/* range = 18 */
	{
		0x016A, 0x0170, 0x0176, 0x017C, 0x0182, 0x0189, 0x018F, 0x0196,
		0x019C, 0x01A3, 0x01AA, 0x01B1, 0x01B8, 0x01BF, 0x01C6, 0x01CE,
		0x01D6, 0x01DD, 0x01E5, 0x01ED, 0x01F5, 0x01FD, 0x0206, 0x020E,
		0x0217, 0x021F, 0x0228, 0x0231, 0x023B, 0x0244, 0x024D, 0x0257,
		0x0261, 0x026B, 0x0275, 0x027F, 0x028A, 0x0294, 0x029F, 0x02AA,
		0x02B5, 0x02C1, 0x02CC, 0x02D8, 0x02E4, 0x02F0, 0x02FC, 0x0309,
		0x0316, 0x0323, 0x0330, 0x033D, 0x034B, 0x0358, 0x0366, 0x0375,
		0x0383, 0x0392, 0x03A1, 0x03B0, 0x03C0, 0x03CF, 0x03DF, 0x03EF,
		0x0400, 0x0411, 0x0422, 0x0433, 0x0445, 0x0457, 0x0469, 0x047B,
		0x048E, 0x04A1, 0x04B5, 0x04C8, 0x04DC, 0x04F1, 0x0506, 0x051B,
		0x0530, 0x0546, 0x055C, 0x0572, 0x0589, 0x05A0, 0x05B8, 0x05D0,
		0x05E8, 0x0601, 0x061A, 0x0634, 0x064E, 0x0668, 0x0683, 0x069E,
		0x06BA, 0x06D6, 0x06F3, 0x0710, 0x072E, 0x074C, 0x076A, 0x078A,
		0x07A9, 0x07C9, 0x07EA, 0x080B, 0x082D, 0x084F, 0x0872, 0x0895,
		0x08B9, 0x08DE, 0x0903, 0x0929, 0x094F, 0x0976, 0x099E, 0x09C6,
		0x09EF, 0x0A19, 0x0A43, 0x0A6E, 0x0A9A, 0x0AC7, 0x0AF4, 0x0B50
	},
	/* range = 19 */
	{
		0x0156, 0x015C, 0x0162, 0x0168, 0x016E, 0x0174, 0x017B, 0x0181,
		0x0188, 0x018F, 0x0196, 0x019D, 0x01A4, 0x01AB, 0x01B2, 0x01BA,
		0x01C2, 0x01C9, 0x01D1, 0x01D9, 0x01E2, 0x01EA, 0x01F2, 0x01FB,
		0x0204, 0x020D, 0x0216, 0x021F, 0x0228, 0x0232, 0x023C, 0x0245,
		0x0250, 0x025A, 0x0264, 0x026F, 0x027A, 0x0284, 0x0290, 0x029B,
		0x02A7, 0x02B2, 0x02BE, 0x02CA, 0x02D7, 0x02E3, 0x02F0, 0x02FD,
		0x030A, 0x0318, 0x0325, 0x0333, 0x0342, 0x0350, 0x035F, 0x036E,
		0x037D, 0x038C, 0x039C, 0x03AC, 0x03BC, 0x03CD, 0x03DD, 0x03EF,
		0x0400, 0x0412, 0x0424, 0x0436, 0x0449, 0x045C, 0x046F, 0x0483,
		0x0497, 0x04AB, 0x04C0, 0x04D5, 0x04EA, 0x0500, 0x0516, 0x052C,
		0x0543, 0x055B, 0x0572, 0x058A, 0x05A3, 0x05BC, 0x05D5, 0x05EF,
		0x0609, 0x0624, 0x063F, 0x065B, 0x0677, 0x0694, 0x06B1, 0x06CE,
		0x06ED, 0x070B, 0x072A, 0x074A, 0x076A, 0x078B, 0x07AD, 0x07CF,
		0x07F1, 0x0814, 0x0838, 0x085D, 0x0882, 0x08A7, 0x08CE, 0x08F5,
		0x091C, 0x0945, 0x096E, 0x0997, 0x09C2, 0x09ED, 0x0A19, 0x0A46,
		0x0A73, 0x0AA1, 0x0AD1, 0x0B00, 0x0B31, 0x0B63, 0x0B95, 0x0BFD
	},
	/* range = 20 */
	{
		0x0143, 0x0148, 0x014E, 0x0154, 0x015B, 0x0161, 0x0167, 0x016E,
		0x0175, 0x017B, 0x0182, 0x0189, 0x0191, 0x0198, 0x019F, 0x01A7,
		0x01AF, 0x01B6, 0x01BE, 0x01C6, 0x01CF, 0x01D7, 0x01E0, 0x01E9,
		0x01F1, 0x01FA, 0x0204, 0x020D, 0x0217, 0x0220, 0x022A, 0x0234,
		0x023F, 0x0249, 0x0254, 0x025F, 0x026A, 0x0275, 0x0280, 0x028C,
		0x0298, 0x02A4, 0x02B0, 0x02BD, 0x02CA, 0x02D7, 0x02E4, 0x02F1,
		0x02FF, 0x030D, 0x031B, 0x032A, 0x0339, 0x0348, 0x0357, 0x0366,
		0x0376, 0x0386, 0x0397, 0x03A8, 0x03B9, 0x03CA, 0x03DC, 0x03EE,
		0x0400, 0x0413, 0x0426, 0x0439, 0x044D, 0x0461, 0x0475, 0x048A,
		0x049F, 0x04B5, 0x04CB, 0x04E1, 0x04F8, 0x050F, 0x0526, 0x053E,
		0x0557, 0x0570, 0x0589, 0x05A3, 0x05BD, 0x05D8, 0x05F3, 0x060F,
		0x062B, 0x0648, 0x0665, 0x0683, 0x06A1, 0x06C0, 0x06E0, 0x0700,
		0x0721, 0x0742, 0x0764, 0x0786, 0x07A9, 0x07CD, 0x07F1, 0x0816,
		0x083C, 0x0862, 0x088A, 0x08B1, 0x08DA, 0x0903, 0x092D, 0x0958,
		0x0983, 0x09B0, 0x09DD, 0x0A0B, 0x0A3A, 0x0A6A, 0x0A9A, 0x0ACC,
		0x0AFE, 0x0B31, 0x0B65, 0x0B9A, 0x0BD1, 0x0C08, 0x0C40, 0x0CB3
	},
	/* range = 21 */
	{
		0x0130, 0x0136, 0x013C, 0x0142, 0x0148, 0x014F, 0x0155, 0x015C,
		0x0162, 0x0169, 0x0170, 0x0177, 0x017E, 0x0185, 0x018D, 0x0195,
		0x019C, 0x01A4, 0x01AC, 0x01B4, 0x01BD, 0x01C5, 0x01CE, 0x01D7,
		0x01E0, 0x01E9, 0x01F2, 0x01FC, 0x0206, 0x020F, 0x021A, 0x0224,
		0x022E, 0x0239, 0x0244, 0x024F, 0x025A, 0x0266, 0x0272, 0x027E,
		0x028A, 0x0296, 0x02A3, 0x02B0, 0x02BD, 0x02CA, 0x02D8, 0x02E6,
		0x02F4, 0x0303, 0x0311, 0x0320, 0x0330, 0x033F, 0x034F, 0x035F,
		0x0370, 0x0381, 0x0392, 0x03A3, 0x03B5, 0x03C7, 0x03DA, 0x03ED,
		0x0400, 0x0414, 0x0428, 0x043C, 0x0451, 0x0466, 0x047B, 0x0491,
		0x04A8, 0x04BE, 0x04D6, 0x04ED, 0x0506, 0x051E, 0x0537, 0x0551,
		0x056B, 0x0585, 0x05A0, 0x05BC, 0x05D8, 0x05F5, 0x0612, 0x0630,
		0x064E, 0x066D, 0x068C, 0x06AC, 0x06CD, 0x06EE, 0x0710, 0x0733,
		0x0756, 0x077A, 0x079F, 0x07C4, 0x07EA, 0x0811, 0x0838, 0x0860,
		0x088A, 0x08B3, 0x08DE, 0x0909, 0x0936, 0x0963, 0x0991, 0x09C0,
		0x09EF, 0x0A20, 0x0A52, 0x0A84, 0x0AB8, 0x0AEC, 0x0B22, 0x0B58,
		0x0B90, 0x0BC8, 0x0C02, 0x0C3D, 0x0C79, 0x0CB6, 0x0CF4, 0x0D74
	},
	/* range = 22 */
	{
		0x011F, 0x0125, 0x012B, 0x0131, 0x0137, 0x013D, 0x0144, 0x014A,
		0x0151, 0x0158, 0x015E, 0x0165, 0x016D, 0x0174, 0x017B, 0x0183,
		0x018B, 0x0193, 0x019B, 0x01A3, 0x01AB, 0x01B4, 0x01BD, 0x01C6,
		0x01CF, 0x01D8, 0x01E2, 0x01EB, 0x01F5, 0x01FF, 0x0209, 0x0214,
		0x021E, 0x0229, 0x0234, 0x0240, 0x024B, 0x0257, 0x0263, 0x026F,
		0x027C, 0x0289, 0x0296, 0x02A3, 0x02B0, 0x02BE, 0x02CC, 0x02DB,
		0x02E9, 0x02F8, 0x0307, 0x0317, 0x0327, 0x0337, 0x0348, 0x0358,
		0x036A, 0x037B, 0x038D, 0x039F, 0x03B2, 0x03C5, 0x03D8, 0x03EC,
		0x0400, 0x0415, 0x0429, 0x043F, 0x0455, 0x046B, 0x0482, 0x0499,
		0x04B0, 0x04C8, 0x04E1, 0x04FA, 0x0514, 0x052E, 0x0548, 0x0563,
		0x057F, 0x059B, 0x05B8, 0x05D5, 0x05F3, 0x0612, 0x0631, 0x0651,
		0x0671, 0x0692, 0x06B4, 0x06D6, 0x06F9, 0x071D, 0x0742, 0x0767,
		0x078D, 0x07B4, 0x07DB, 0x0804, 0x082D, 0x0857, 0x0882, 0x08AD,
		0x08DA, 0x0907, 0x0936, 0x0965, 0x0995, 0x09C6, 0x09F9, 0x0A2C,
		0x0A60, 0x0A95, 0x0ACC, 0x0B03, 0x0B3B, 0x0B75, 0x0BB0, 0x0BEC,
		0x0C29, 0x0C68, 0x0CA7, 0x0CE8, 0x0D2B, 0x0D6E, 0x0DB3, 0x0E41
	},
	/* range = 23 */
	{
		0x010F, 0x0115, 0x011B, 0x0121, 0x0127, 0x012D, 0x0133, 0x013A,
		0x0140, 0x0147, 0x014E, 0x0155, 0x015C, 0x0163, 0x016B, 0x0172,
		0x017A, 0x0182, 0x018A, 0x0192, 0x019B, 0x01A3, 0x01AC, 0x01B5,
		0x01BE, 0x01C8, 0x01D1, 0x01DB, 0x01E5, 0x01EF, 0x01FA, 0x0204,
		0x020F, 0x021A, 0x0225, 0x0231, 0x023D, 0x0249, 0x0255, 0x0261,
		0x026E, 0x027B, 0x0289, 0x0296, 0x02A4, 0x02B2, 0x02C1, 0x02D0,
		0x02DF, 0x02EE, 0x02FE, 0x030E, 0x031E, 0x032F, 0x0340, 0x0351,
		0x0363, 0x0376, 0x0388, 0x039B, 0x03AE, 0x03C2, 0x03D6, 0x03EB,
		0x0400, 0x0415, 0x042B, 0x0442, 0x0459, 0x0470, 0x0488, 0x04A0,
		0x04B9, 0x04D2, 0x04EC, 0x0507, 0x0522, 0x053D, 0x0559, 0x0576,
		0x0593, 0x05B1, 0x05D0, 0x05EF, 0x060F, 0x0630, 0x0651, 0x0673,
		0x0695, 0x06B9, 0x06DD, 0x0702, 0x0727, 0x074E, 0x0775, 0x079D,
		0x07C6, 0x07EF, 0x081A, 0x0846, 0x0872, 0x089F, 0x08CE, 0x08FD,
		0x092D, 0x095E, 0x0991, 0x09C4, 0x09F9, 0x0A2E, 0x0A65, 0x0A9D,
		0x0AD6, 0x0B10, 0x0B4B, 0x0B88, 0x0BC6, 0x0C05, 0x0C45, 0x0C87,
		0x0CCB, 0x0D0F, 0x0D55, 0x0D9D, 0x0DE6, 0x0E31, 0x0E7D, 0x0F1A
	},
	/* range = 24 */
	{
		0x0100, 0x0106, 0x010B, 0x0111, 0x0117, 0x011D, 0x0124, 0x012A,
		0x0130, 0x0137, 0x013E, 0x0145, 0x014C, 0x0153, 0x015B, 0x0162,
		0x016A, 0x0172, 0x017A, 0x0182, 0x018B, 0x0193, 0x019C, 0x01A5,
		0x01AF, 0x01B8, 0x01C2, 0x01CB, 0x01D6, 0x01E0, 0x01EA, 0x01F5,
		0x0200, 0x020B, 0x0217, 0x0222, 0x022E, 0x023B, 0x0247, 0x0254,
		0x0261, 0x026E, 0x027C, 0x028A, 0x0298, 0x02A7, 0x02B5, 0x02C5,
		0x02D4, 0x02E4, 0x02F4, 0x0305, 0x0316, 0x0327, 0x0339, 0x034B,
		0x035D, 0x0370, 0x0383, 0x0397, 0x03AB, 0x03C0, 0x03D5, 0x03EA,
		0x0400, 0x0416, 0x042D, 0x0445, 0x045D, 0x0475, 0x048E, 0x04A8,
		0x04C2, 0x04DC, 0x04F8, 0x0514, 0x0530, 0x054D, 0x056B, 0x0589,
		0x05A8, 0x05C8, 0x05E8, 0x0609, 0x062B, 0x064E, 0x0671, 0x0695,
		0x06BA, 0x06E0, 0x0706, 0x072E, 0x0756, 0x077F, 0x07A9, 0x07D4,
		0x0800, 0x082D, 0x085B, 0x088A, 0x08B9, 0x08EA, 0x091C, 0x094F,
		0x0983, 0x09B9, 0x09EF, 0x0A27, 0x0A60, 0x0A9A, 0x0AD6, 0x0B12,
		0x0B50, 0x0B90, 0x0BD1, 0x0C13, 0x0C56, 0x0C9C, 0x0CE2, 0x0D2B,
		0x0D74, 0x0DC0, 0x0E0D, 0x0E5C, 0x0EAC, 0x0EFE, 0x0F52, 0x0FFF
	}
};

static const UINT8	ma_woodblk[16] = 
{ 	0xC9, 0x40, 0x91, 0x9A, 0xF2, 0x4A, 0x40, 0x82, 
	0x06, 0x81, 0x87, 0xFF, 0x08, 0x40, 0x21, 0x00
};

static const UINT32	ma_ma2ex_fnum[25] = 
{
		0x08489, 0x08C6A, 0x094C3, 0x09D9C, 0x0A6FB, 0x0B0E9,
		0x0BB6E, 0x0C693, 0x0D262, 0x0DEE5, 0x0EC26, 0x0FA31,
		0x10911, 0x118D4, 0x12987, 0x13B38, 0x14DF7, 0x161D2,
		0x176DC, 0x18D27, 0x1A4C4, 0x1BDCA, 0x1D84C, 0x1F461,
		0x21222
};

#endif /*__MATABLE_H__*/
